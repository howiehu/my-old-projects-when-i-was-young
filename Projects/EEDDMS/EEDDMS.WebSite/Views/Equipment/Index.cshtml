@model EEDDMS.WebSite.Models.EquipmentListViewModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_EquipmentModuleLayout.cshtml";
}
<h2>
    设备列表</h2>
<p>
    @Html.ActionLink("新建", "Create")
</p>
@using (Html.BeginForm("QueryEquipment", "Equipment"))
{

    @Html.ValidationSummary(true)
    <fieldset>
        <div class="editor-label">
            设备编号
        </div>
        <div class="editor-field">@Html.TextBox("equipmentNo")@Html.ValidationMessage("equipmentNo")
        </div>
        <div class="editor-label">
            设备名称
        </div>
        <div class="editor-field">
            @Html.TextBox("equipmentDetailName")@Html.ValidationMessage("equipmentDetailName")
        </div>
        <div class="editor-label">
            设备型号
        </div>
        <div class="editor-field">@Html.TextBox("equipmentDetailType")@Html.ValidationMessage("equipmentDetailType")
        </div>
        <div class="editor-label">
            出厂日期开始
        </div>
        <div class="editor-field">
            @Html.TextBox("startproductionDate")
            @Html.ValidationMessage("startproductionDate")
        </div>
        <div class="editor-label">
            出厂日期结束
        </div>
        <div class="editor-field">
            @Html.TextBox("endproductionDate")
            @Html.ValidationMessage("endproductionDate")
        </div>
        <div class="editor-label">
            启用日期开始
        </div>
        <div class="editor-field">
            @Html.TextBox("startToUseDate")
            @Html.ValidationMessage("startToUseDate")
        </div>
        <div class="editor-label">
            启用日期结束
        </div>
        <div class="editor-field">
            @Html.TextBox("endstartToUseDate")
            @Html.ValidationMessage("endstartToUseDate")
        </div>
        <div class="editor-label">
            设备状态
        </div>
        <div class="editor-field">
            @Html.DropDownList("state", new SelectListItem[] 
            { 
                new SelectListItem { Text = " ", Value = "3"},
                new SelectListItem { Text = "正常", Value = "0"},
                new SelectListItem { Text = "故障", Value = "1"},
                new SelectListItem { Text = "报废", Value = "2"}
            })
        </div>
        <div class="editor-label">
            设备健康状况
        </div>
        <div class="editor-field">
            @Html.TextBox("health")@Html.ValidationMessage("health")
        </div>
        <input type="submit" value="查询" />
        <input type="reset" value="重置" />
    </fieldset>
}
<table>
    <tr>
        <th>
            设备编号
        </th>
        <th>
            设备名称
        </th>
        <th>
            设备型号
        </th>
        <th>
            出厂日期
        </th>
        <th>
            启用日期
        </th>
        <th>
            设备状态
        </th>
        <th>
            设备健康状况
        </th>
        <th>
            备注
        </th>
        <th>
        </th>
    </tr>
    @foreach (var item in Model.Equipments)
    { <tr>
        <td>
            @Html.DisplayFor(modelItem => item.EquipmentNo)
        </td>
        <td>
            @if (item.EquipmentDetail != null)
            {
                @Html.DisplayFor(modelItem => item.EquipmentDetail.Name)
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem
=> item.EquipmentDetail.Type)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ProductionDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StartToUseDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem
=> item.State)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Health)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Memo)
        </td>
        <td>
            @Html.ActionLink("编辑", "Edit",
new { id = item.Id }) | @Html.ActionLink("详情", "Details", new { id = item.Id })
            | @Html.ActionLink("删除", "Delete", new { id = item.Id })
        </td>
    </tr> }
</table>
<div class="pager">
    @Html.PageLinks(Model.PagingInfo, x => Url.Action("Index",
new { page = x }))
</div>
